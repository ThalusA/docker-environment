FROM fedora:latest
LABEL maintainer="Alexandre MONIER <alexandre.monier@epitech.eu>"

# DEFAULT WORKDIR FOR ALL BUILDING STEPS
WORKDIR /tmp

# GLOBAL ENV
ENV HOME /root

# PREREQUIREMENTS
ARG ADDONS="dnf-plugins-core ca-certificates"
ARG LANGS="langpacks-en"

# REQUIREMENTS
ARG TOOLS="curl git net-tools nc docker docker-compose zsh tar tree bash jq \
    unzip zip diffutils wget bc which vim httpie util-linux-user bison"
ARG BUILD_TOOLS="autoconf automake cmake maven meson make g++ nasm \
    gcc clang clang-analyzer ninja-build clang-tools-extra nodejs golang \
    ghc stack cabal-install java dotnet glibc-locale-source yarnpkg \
    glibc-langpack-en python3 python3-pip python3-virtualenv glibc-devel"
ARG DEBUGGING_TOOLS="gdb valgrind strace ltrace"
ARG LIBS="openssl-devel bzip2 bzip2-devel readline readline-devel sqlite \
    sqlite-devel"

# INSTALL ALL PREREQUIREMENTS & REQUIREMENTS
RUN dnf -y upgrade && \
    dnf -y install $ADDONS $LANGS && \
    dnf -y --refresh install $TOOLS $BUILD_TOOLS $DEBUGGING_TOOLS $LIBS

# INITIALIZE LOCALE LANGUAGE
RUN localedef -i en_US -f UTF-8 en_US.UTF-8

# INSTALL OH-MY-ZSH
RUN curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash

# INSTALL GVM & NVM
RUN curl -sSL https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer | bash
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
        
# UPDATE NPM
RUN npm install --global npm@latest

# UPDATE PIP
RUN pip install --upgrade pip

# ADD CARGO BINARIES TO PATH
ENV PATH $HOME/.cargo/bin:$PATH

# INSTALL RUSTUP AND ITS' TOOLCHAIN
RUN curl https://sh.rustup.rs -sSf | \
    sh -s -- --default-toolchain stable -y && \
    rustup update beta && \
    rustup update nightly

# INSTALL GRADLE & KOTLIN
RUN curl -s "https://get.sdkman.io" | bash && \
    . /root/.sdkman/bin/sdkman-init.sh && \
    sdk install gradle && \
    sdk install kotlin

# INSTALLATION IS FINISHED, SETTING UP SHELL ENVIRONMENT
WORKDIR /root
CMD [ "zsh" ]
